<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</title>
  <style>
    * {
            font-family: sans-serif;
        }
        th {
            background-color: #f2f2f2;
        }
        img {
            max-width: 70px;
            height: auto;
        }
        a {
            text-decoration: none;
            color: #007bff;
        }
        a:hover {
            text-decoration: underline;
        }
        .table {
            width: 90%;
            margin: 0 auto; /* ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á */
            background-color: white;
            border-radius: 20px;
            overflow: hidden;
        }
        table {
            border-collapse: collapse;     
            text-align: center;
            vertical-align: middle;
        }
        table .head {
            border-bottom: solid 1px #EAEDED;
            color: #ffffff;
        }
        table .head th {
            padding: 12px 24px;
            font-weight: 600;
            background-color: #0000ae;
            border: 1px solid #0000ae;
        }
        table .row {
            border-bottom: solid 1px #c2c2c2;
            background-color: #e9e9e9;
            border: 1px solid #c2c2c2;
        }
        table .row:hover {
            background-color: #EAEDED;
        }
        table .row td {
            padding: 16px 24px;
        }
        table .row:nth-child(odd) {
            background-color: #f3f3f3;
        }
        table .row:last-child {
            border: none;
        }
  </style>
</head>
<body class="p-4">
  <h1>
    <center>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</center>
  </h1>

  <center>
    <h3>
      <input type="text" id="searchInput" style="margin-bottom: 5px; padding: 15px; width: 800px; border-radius: 20px; border: 1px solid #c2c2c2;" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤">
    </h3>
  </center>
  <div style="width: 90%; margin: 0 auto; text-align: right; margin-bottom: 5px;">
    <button onclick="exportDataToExcel()" style="padding: 10px 20px; border-radius: 10px; background-color: green; color: white; border: none;">
      Export Excel
    </button>
  </div>


    <table class="table table-bordered table-striped" style="margin-top: 0;">
      <thead>
        <tr class="head">
          <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
          <th>‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
          <th>‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</th>
          <th>‡∏ä‡∏∑‡πà‡∏≠</th>
          <th>‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠</th>
          <th>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</th>
          <th>‡∏£‡∏≤‡∏Ñ‡∏≤</th>
          <th>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î</th>
          <th>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢</th>
          <th>‡∏•‡∏¥‡∏á‡∏Å‡πå</th>
          <th>‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö</th>
        </tr>
      </thead>
      <tbody id="product-body">
        <tr><td colspan="11">Loading data...</td></tr>
      </tbody>
    </table>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
  <script>
    const searchInput = document.getElementById('searchInput');

    function renderTable(data) {
      const tbody = document.getElementById('product-body');
      const filter = searchInput.value.toLowerCase();
      tbody.innerHTML = '';
    
      const filtered = data
      .filter(p => (p.name || '').toLowerCase().includes(filter))
      .slice().reverse();

    
      let counter = 1;
      filtered.forEach(p => {
        const brandDisplay = p.brand
          ? (/\.(jpeg|jpg|gif|png|webp|svg)$/i.test(p.brand)
            ? `<img src="${p.brand}" style="max-height: 40px;">`
            : p.brand)
          : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
      
        const row = `
          <tr class="row">
            <td>${counter++}</td>
            <td>${p.product_code || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}</td>
            <td><img src="${p.image}" alt="img" width="80"></td>
            <td>${p.name}</td>
            <td>${brandDisplay}</td>
            <td>${p.category || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}</td>
            <td>${p.price}</td>
            <td>${p.discount}</td>
            <td>${p.sellprice}</td>
            <td><a href="${p.link}" target="_blank">‡πÄ‡∏õ‡∏¥‡∏î</a></td>
            <td><img src="${p.logo}" style="max-height: 40px;"></td>
          </tr>`;
        tbody.insertAdjacentHTML('beforeend', row);
      });
    
      if(filtered.length === 0) {
        tbody.innerHTML = `<tr><td colspan="11">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</td></tr>`;
      }
    }
    
    let dataCache = [];

    async function fetchDataAndUpdate() {
      try {
        const res = await fetch('/data');
        const raw = await res.json();
        console.log('üì¶ ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', raw);
        const data = Object.values(raw)
          .filter(Array.isArray)
          .flat();
          if (!Array.isArray(data)) {
            console.error("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà array:", data);
            return;
          }
        dataCache = data;
        renderTable(data);
      } catch (err) {
        console.error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err);
      }
    }


    
    fetchDataAndUpdate();
    setInterval(fetchDataAndUpdate, 10000);
    
    searchInput.addEventListener('input', () => renderTable(dataCache));
    
    function exportDataToExcel() {
      if (!dataCache || dataCache.length === 0) {
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ export");
        return;
      }
    
      const exportData = dataCache.map((p, index) => ({
        ‡∏•‡∏≥‡∏î‡∏±‡∏ö: index + 1,
        ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: p.product_code || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: p.name,
        ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠: typeof p.brand === 'string' ? p.brand : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: p.category || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ï‡πá‡∏°: p.price,
        ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î: p.discount,
        ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢: p.sellprice,
        ‡∏•‡∏¥‡∏á‡∏Å‡πå: p.link,
        ‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö: p.source
      }));
    
      const ws = XLSX.utils.json_to_sheet(exportData);
      const wb = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(wb, ws, "‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
    
      XLSX.writeFile(wb, "‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î.xlsx");
    }
  </script>
</body>
</html>
